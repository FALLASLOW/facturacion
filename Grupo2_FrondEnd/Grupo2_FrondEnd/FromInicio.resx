<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAD8GwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABu2SURBVHja7Z1tkFTVmcd72jgDMz0z9HTP0NP0jJaKCSvyJswAMgOjyIsgYtWKuyuJ
        JkZwS1zFQArcKlBJAkrxsppSrNIVUrGyq2F1HRQJ5csm7Ic1+eAO61K1tRs30SIf1sQPfrOsOnv+Z7rH
        pum+fV/7nnPv/6n6V0319Ll9zr33+Z338yQSNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNZqxNkspJFQxX
        rlgWGo1m0xZJ/UTqnNTHhgtlOCa1kI+VRrPn/HAaETGdIwRotPrN/p9E0PlLQkughY+ZRqtuuYjW/uWt
        gBwfM41W3QrFfnNUAfBxsYw0Go0AoNFo5ZaPAQDyfMw02sXz/HCMBVLnazlQk1Tb174mUpoKeWuyBsD5
        YhnzCa4ToMXYas3zw0G+rOVAcLC/7O8X915xhfiuZkKekDfk0QIAXxbLyHUCtFg7v6uRftSycLSHv/51
        sfXqq7US8oS8pawBwHUCtFhbc8LDPD+cC7UtHO4hzYQ8fdcbAErrBJr5mtAaZSmpnoo+aVDCb8yV+i8C
        oKZwb+Y08Hn0FN8BWowsK7VWap/UCakPpD5KNGZdvGUfv566mpvFpiuv1BYAmyQA0jKPHgBQbYwgKH1U
        fPYniu/C2uK7QYuw498n9a9SnycMnEb7s44O8cD06do5f0nI2wyZx4SZU5R4J85IbZbK0F2iZYulTkp9
        YejLqWr/v+jv17L2L28F3CHz2OWtFRC28I68WXxnaIZbk9QGqf8x4eWrNs+PJjVqfjj/Qxo7f7kAAbQE
        kHeH6wR0Et6Z24vvEM1QwwP8gym1T7V5fvT50bTeaojzl1oCyDPy7nCdgG76Q7ECoRlo15tS8yfqzPM/
        ZKh8XicQZkuA3QHDLFPs8wvTAKDrNJ8m04Rh6SRnCMyy++wO+F3SMlk0d3SJls5ssJqSVb/TlEwSALXG
        QOS9Uc9iSjbw54HfwbN3MDC4mW5lznTfmXoPFS9AYXi9mLXpB2Jg5wti0a6fikW7g9RL4rqtT6nfJQBq
        PxPcI9yrQJ+FfNZ45nj2eAea27vsQOAMWwFm2NpEnXn+tt7LxezNPxJLD7wpRg6fFiOHfiGWHToVqPA7
        eLFRuxEA1cuPe4N7hHsV+POQzxy/g3dglnwX8E7YWCewhu6lv+2zrvnT8oH/UD586fQH32qc5EuH2gfN
        TwKgBgA6s+oeKSdt4LPBuwAINLen60FgL91Lb8O67hNWDxFNPlC/oc5PAGgNAAjvRGHo1noAGE1w74DW
        hs0dH1gN+KHfp5qYBAABcEEr4LR6N+oMDOLd6qab6WvY4fWR1SDT4M4Xxvv8BAABUA4A+U5gYNBqkFbq
        twkeaaa1WR6qqV6wXXZfMA4CRmYQ8OApe4DeZQ3oBA81jQAAbNQwqA2GnxwVix/7GacBDZ8GxDPEs6zb
        6rPRQiMAYgKAeX9zSEydf6No7enjQiDDFwLhGebks5z34CECgACwBgBqCTg/XpoElwJHailw69Q+CYHD
        tVsCBEDcAXBKNRVR8yc02wwUBemwGSg3f7l6xlXHBAiAmANAfob+Yli1f0LzY78bdGx4sK0A+WzxjGs9
        fwIg5gBQL8CUrFYHgkRJYR8IMj7L8FMCgABw/QJQBsuH508AEAAUAUCLJQAuSTaJqZlJIt892ZWQFteg
        M4ZzfwkAAsDTC4AX7PRzy8TZ46vEv/98pSMhzTvPj4grCm109hq6opAS78p75Pb+4tngGREABEAgLwBq
        Gbxofzpzm/jjLx3qV7eJ82+vExtW9tHZa+iOVf3qHuFeOb2/eCZ4NnhGBAABEBgAUNvghfu/f1nvWHix
        Tz4zLKZf1k6Hr9DV8p689exSdY9c3Vv5TPBsCAACQFsAlHTy2WFxx8p+Mb2/3XV/NyrCPcC9gPN/6uGe
        GgiASVK5RPAxEHVXrngv4gMA1HKfnF4nPnx1teO+btSEe4B74bbmNxQACBGPKNHnEo2Jg6izcA8QFXph
        bAAAffrL9c7HESIq3Auv99MgACwqvvTs+l2oc35AwBgAUP7KEABMKtb8dPjqQkughQCgogqAHGv/uq2A
        HAFARRUAlu8n5b2LRQAQAAQAARA9AJQPGtoZNNNpkNGPQT4CgACILQAwRfb7t25RK90g/G01bYb//e+p
        dWLsn8KfZjwr84C8eJ3miwMAkskm0ZVqEd0dk1wJaZMWeyHq7bWot5ci6PwRADX02oEl4pbFeXF5rk3p
        luvz4p8PLqn5/VcOLxMrhi4Tffl20RviIh/8NvKwYvgy8XOZJwLA+v2Egzxz70Lx8sNLxT9sHXYkpEFa
        XMPNXhY7eymCzh8BUNmMlzr66IAoZC9+qft7WhUEymtW/P3KoWUin+vQrnmHPAECQbUEogAA1JJwlPce
        WyneedSZkAZpcQ03e1ns7KUIOn8EQIXzH3tsUOQztR8IWgK/k90B9LEhNLVR8+vax1s5fLnKYxBjAlEB
        AGpLOMzbu1c4EtIgbT0A1Hp/7dy/oPNHAJQN4NVzfgjdAVC7RPGx46tFX6++G4368h1qTOCPBAABQABY
        NPttOH8JAP9BABAABEA0AGCn2V/ZBfh9ZRdgmF0AAoAAaDgAnM7T1xrwy3fZc34MDL5WZRAQA21aDgL2
        dojjf8dBQF0AUPm+EgAeAOB0nt5rzd8rIQFY1LoeIIDaVo9pwA6VFzg/pwHDB8CYvEefnSltR1+lhL/x
        2RgB4A4AqIkr5+lfs5inr1rz23T+fNH5P62zcAhN7bNcCEQAVAJAVlCnjiwVG9SBNClxlRQOZMFnYzam
        AQmAMgDgpYajY06+WhO9nqM6bfbbcf4LuyQ6LAdez6XAmgAALbKD2+cqp6/8Hz47sG2O+g4BYLMPhTn4
        tbLmt2qqv1jDYd00+1+06fzcDEQAVFPzpUmR6WyuvdJP/g/fIQBsAABCfx9NfqeOa3eev7LPT+cnADw6
        mCcRAC4AcIEDF5vDR1nzEwAEgPldAIz2r7s+b7v//ve7ByQIBsU0Oj8BQABEYxAQG3IK2VZbNzDT3qzk
        94Bf1A8dtTOISAAQAKFNA6I/b7dWb0TNr9N5AI2aRiQACIDQAPCpjxDwo9mvy3kAjTxPgAAgAMJdCuwD
        BPyo+XU9DyDo8wQIAOcAyLa3KBEAPm0G8gIBr85vwnkAQW4mIgCcAaA3PVn86K/mir13zhP5rlYCwK/d
        gG4g4Eez34TtwEFuJyYA7ANg3PnnyTQrlPbZhAABYHM7sBMI+DXVRwDEHQArxCvfWyr6Mm22nb88rWoJ
        pK3f175sm/qN8rQEgAcI+DnPb8J5AOwCBAgAqZN/u1wsn9Vr7fx3zqvqwPgMYOi1gMBNs/LqN97ZTQA4
        2uZbbZ1AabOQ38eH63oeQNDnCcQdANC7Mt3T3xlQNfVF71umVdXyVrV3qSWA71am75fXfPqeAfUbbxMA
        zra2qu3C17vbLuxGupwH0MjzBAiArwRHRW0NEKBLgL/x2Ts2WxJP3zMoVszOK6eHbpo9nt5LnmINANRa
        v/NwYIjbhUBnuRAolgBALY2mOvrrEP52UnPju295SE8A+BDay59QYlFYDryeS4HdOFyxSa8UQnoCgLEB
        GRswRADoJgKAsQEJAAKAAGBsQAKAACAAGBuQACAACADGBiQA9ATAV4OATgOBVh80JAAYG5ChwQwBAKb8
        Tjxyk/jH7y1zHAYcaZC2ctqQAGBsQALAEAA8efdCseiagpjalVJ5ciKkQdr98hoEAGMDsgtgEABQa8P5
        u9PeKxFcAxAotQQYG5CxARkbUGMAoN+Opjtqb7+e+WJ5LVzzHcYGZGxAxgbUHACPrlD9dzTh/QJATl4L
        1ywNJjI2IGMDEgAxAsDUrvZoA4CxARkbkF0Aqy5AX3S7AIwNyMAgURwE3O/TIGCPrP33f3tRdAcBGRuQ
        AIjqNCAggAG8nItpQKRBzQ/nZ2xAxgYkALgQiLEBE4wNSABwKTBjAzI2IGMDEgCMDcjYgDwSjF0AxgZk
        bEDGBuRegOgsBWZsQMYG5F6A+O4FYGxABgbhQqCY7gVgbECGBuNS4BjvBWBsQAKAAIjhXgDGBmQXgF2A
        mO4FYGxAxgbkXoAY7wVgbEDGBuRegBjvBWBsQC4E4kIgLgRibEDGBuRSYB4LHuxafFdnDAbo/H4AzO/8
        /enM+O5MSwBMwfN/SYwcPj3+DpQJn+F/+E6dFzTv4f3M1wPAyw8vFe89ttKF4+ktlAlliwUA/FyL7+ZI
        rSD3AvhxxBfSfnJ6nfjw1VX+5Us6/+nnlompmdovWHNHl7hu61PK0fGsL9RL6n/4jsULel5qQdGRCw6V
        L6Y9X+v6XakW8cy9C5WjOG166y6UCWVDGSMPAL/W4ruNrRfUXgC/Yv2dfGZYbFjRJ67qT/k6aAjnvyTZ
        VPP5NSWTysFRy+M5XyD5Gf6H71i8oF8WHfhjlzpfvEbV6ydl3uEgTgfeTBHKlrR4PsYDIMi1+HZi6zVy
        L4CbWH/4Lpx/en8qsmsVKE8yOy5A0GvxrRbChLEXwEmgD3wHzX7U/HzRqcgBoBFLcdH8tloK2+ilwE5C
        fSF/H766WjX7+aJTkQRAvWkoz2cFhAwgrwAI+v5QBECkAWCrCzKsZxeAAKAIgAAB0Oi9AE5j/REAVOwB
        gCkqTFW5ncayOw0Z1F4AL7H+7NwfTBFl21tET+ckV0Jaq2kmr/c/6Pwlm5pEOtWivpdxKKRBWlwjsPIH
        nL/IAwA3GItVsGjFzUIWpwuRzmq0EMjO/cFLcvT+JeLEzhvF6A5nQhqkxTWCuv9B5w8OcuCuBeLoliXi
        xfudCWmQNp0KrvxB5y/yAMD/cKOxbNXNUlbnS5HXaxPrz879QS0JR/nNE2vF+/ucCWmQFtcI6v4HnT8F
        GOkobzyyXIwCMg6ENEhrBRiv5Q86f7EAQFDpoxC4A86B2hIO82971zgS0iBtPQB4uf9B5w9NZdSWcJjX
        dzgT0iBtpg4AvJQ/6PwRAAQAAUAAEAAEAAFAABAABAABQABwEDD88wj8OC9ANwBUHtASNwC4KT8BYNg0
        YBixAWtNE+oCgDGZh8/OfHUeAYS/8dlYDADgpfwEgCELgcKKDWh1XoA2AJCgPXVkqdiwsl9tS8bmpDvk
        3/hszMY0oPEA8FB+AsCApcC6xAasPC9ABwAAUAe3z626IxGfHdg2R30nqgDwWn4CwITNQBrFBizfLKQD
        AJovTYpMZ3PN/3fJ/+E7UQWA1/ITADYA0BsSAHQMDVa+XVgHAHiV6QDwKgKgngPKlx194DD23xMABAAB
        oMORYMMhHwk2zC4AAUAAhHYoaFD78e3sv9cpNmBlfgkAAiDyAPB7P77b/fdhxQa0yi8BQADEBgB+7sf3
        EhjkLBcCEQAEQJihwdaHtv8+vNiA67VdCpyoEoqrTqiqSAMgk2px9n0CgLEB3eZHNwBM62oVB+9aIA7d
        PSAKmbbYASA3ZbLYdftssXvDHNGbnkwAMDZg+EeCNQoAcP5Ddy+QacbTHf62PQhEBQDjzj9n4rSeR21C
        gABgbEDXsQGDB8Aa8eYjy0V/d5tt5y9PCwjgf1ZpL5PXxm+Up9UJAMceGKpbBjj/7qLzl6cFBPA/y3uX
        aVW/QQAwNqDj2ICBA0DqV3tWi9Vzpzly/nII4H9WDoRr4zfe36shAKSObxsRy67JOXL+cgfF/6wgMDKz
        V/3G6A4CgLEBAwgM4gUA0K9luuf/erGsqS/e7NKXbavp/JUQwHcr018ur4lr/9pl3oIGwOvq5OHl4slv
        zpfdmYshlpdgq+X8lRDIV4Egukj75bXxG68TAIwNWG9pchgAKAmOitoaIECzHX/js/dtdiVekN+9eV6h
        mD6l/kZ6L3lqBABKAgRGZuZUkx0tGtTc+GzUZkti/7fmixtkGjg9VErvJU/cDcjYgA0DAGppNNXRX4fw
        t5Oa22v6sAGAWhpNdfTXIfztpOZW6be7T08AMDZgqAAojQmMj/Kvcddn95g+TACUavKJc/k9OK0feSEA
        GBuw4QDQTY0GgG4iABgbkAAgAHgoKGMDEgAEAI8FZ2xAAoAAYGAQBgbRFQBfDQI6DQRafdDQNABcMIjo
        VAQAAWAyADDl9+7jq8UJRMF1GgZcpnnv8YunDU0CAKb8Xt52gzi6ZchFGPAhlbZy2pAAIACMAcDTm5aI
        Jdf2i95Mu8qTEyEN0uIapgLg8TsHxMCMaaInnVJ5ciKkQdo98hoEAAFgFABQa8Nxe7q8L6bCNXCtUkvA
        BACg1obzZ9Mpz+XHNQCBUkuAAGBsQK0BgH47mv2ovf1aKzEkr4XuwPsGAAB5Q9Mdtbdf5R+YUVDXHCUA
        GBtQewDsW6P672jC+7Z0W17rRHH7sPYAkL+J/nuPD7X/xPOU18I1S4ODXAjE2IAxBMBNBAABwNiAJnQB
        3gukC3BzbLsAg+wCMDZgowKD+DkIONWHQcCpXR3ixwYOAu5Rg4Dey98tr7Fn42D8BgEZGzCc0GB+TwMO
        eZgGRNofGzwNuEdNAxZcTwOi5ofzMzYgYwMaCQDU2u95Wgh0MxcCxW0hEGMDmt8F4FJgLgVmbEBDYwMS
        AAQAYwPGODYg9wKwC8DYgDGODci9ANwLwNiAMY4NyL0A3AvA2IAxjg3IvQDcC8DYgDGODci9AFwKzNiA
        MY4NyL0ABABjA8Y4NiD3AnAvAGMDxjw2IPcCcC8AYwMyNBj3AnAvAGMDEgDcC8CFQIwNyC4AlwJzKTBj
        A5oTG/CEfFF+88RaF46nt1AmlM0KAFnpHEe3LBFvoOWx88ZICWVC2bI8EoyxAS0dQNYSJ3be6LjprbtQ
        JpTNygHSqRZx4K4FylGcNr11F8qEsqGMPBSUsQGrKinhBwdxOvBmilC2pAXgk01NykGyDgfeTBDKhLKh
        jDwWnLEBKYqBQRgYhKIIAAKAoggAAoAiAAgAAoAiADgIqNN5BI2KDUgRAJwGjHFsQC/TYHammbyuwwg6
        f/hfZ2uzSLc1iykOhTRIG3T5g8wfFwLFPDagl4UwdhaaeAVw0PmDg+y47Vqxb+N1Yu+dzoQ0SItrBFX+
        oPPHpcAxjw3oZSmsnaWmXrtgQecPtSQc5bn7Fosjmxc5EtIgLa4RVPmDzh8BEPPYgF42w9jZbOL1+QWd
        PzSVUVvCYZ7d5ExIg7RT6gDAS/mDzl+CsQHjHRuQACAAEowNGN/YgAQAAZBgbMD4xgYkAAiABGMDxjc2
        YCMBUL5OQhdANRIAbspPADA2YKCxARsBgDGZh8/O3CY+Ob1OfPjqKiX8jc/GYgAAL+UnABgbMNCFQA0B
        wPFV4tSRpWLDyn4xvT8lrpK6Q/6Nz8bqTINFAgAeyk8AMDZgoLEBg3YwtFAObp+rXvrK/+GzA9vmWM7i
        mA4Ar+UnAAzejGPCZqCgHaz50qTIdNZ+Abvk//CdqALAa/kJAALAaAB4lekA8CoCgAAgAAgAAoAAIAAI
        AAKAIgAIAAKAIgAIAAKAIgAIAAKAMgcAmVSLs+9HDACl03oIAAcAqHWgAmUtOwdONBIAuSmTxa7bZ4vd
        G+aI3vTk2AEg2zFJ3L/qG2LL6hmiu2MSAWAHAFZHKlF1lgjbOHKqUQAYd/45E6f1PGoTAlEBgHL+1d+Y
        OK3HLgRiD4B6Z/pR1qp35qFXBzv2wJCY1tVa1/l3F52/PC0ggP9ZpZ2WaVW/oSsAntg4X0ytU4YJ569I
        awcCuDZ+I7YAoIKVJwBIHd82IpZdk3Pk/OUOiv9ZQWBkZq/6jdEd+gEAeuqeQTE4vbvm9eHgWyqcf8JB
        Ny1S/8taQADXflr+hpu8EQBUoAB4XYXgXi6e/OZ8Uchc3ArIy5ZBLeevhEC+SiuikGkT++W18RuvawqA
        I5sXi+23zqzaCkB04lrOXwkBfLcaPL8vr+0+b6YAYAoBYCoASgIERmbmVJMdXQLU3Phs1GZLYv+35osb
        ZBo4PVRK7yVPjQBASYAAamuAAMLf+OyIHUeV+v76mWLh1d3K6XNl6b3kyQgALH7sZ6K1p4/OaDgAUEuj
        qY7+OoS/ndTcKv129+nDBgBaAugOoL8OodmOz5ykR5onJPSg8fSLIg6Ag6fE8JOjIjf/Rjqj4QAo1eQT
        5/J7cFo/8tJoAJQ7nZdreU1vGADeEiOHfiHmPXhItE5lK8B0AOimMACgk4wAQEnzHjwsWwLLVXcAYwJI
        R3mUvI/NHV2iKZkkAAgAvQGAlgC6AxgTwPcpP/SSuG7rUwoCBAABEB4AdtUHQGlMQH2P8kUjh08rCFjN
        shAABIBXAOSlPqp5JpqsfQZ2vqBq+PoAoHyVjXUWOgHggkFEp4oAAI5sWuQ4AOiEQgRAj9QHNZfytkwW
        szb9QNVGdEoCwGoa8OVtN4ijW4ZchAEfUmkrpw1NAgCmAQ9/Z6HYu3G+4zDgSHP4noUXlaFRAEhJnbAa
        aS4MrxdLD7xJhyQAaurxOwfEwIxpoiedUnlyIqRB2j3yGqYC4MF1s8WsK3tFprNtYsuwXSHNrKt61TXC
        AABsnxUAmtvTshXwQ9kKYDeAALi45ofzZ9Mpz1OauAYgUGoJmAAA1Pxw3LR0Yq/lT3em1LVKZWkkANZK
        fW6Vubbey8WszT9ULQF0B9SYAAfqYj0IiH47mu6ovf1a1zAwo6CuOWoAANBvR7MfNb9f5Z8tWwKqO9Bg
        AGSlztTLHFoChaFb1ZjAwM7n1ewAp+riOw2I30T/vceH2n9iA468Fq5ZGhzUGgBwUNl/z/hQ+088T3mt
        vcXtw40EAGyz1Bd2MomBQbyUXKwT74VABEC0AJCRepPLa7kUOMwuwKBpXQDZXMcAnuldgJItlvpvOhYB
        4GQQcI8aBGz3XJZueY09GwcNGwQcnwHo6vTeCsI1Hro1nEHAcvtzqfN0LgLAifaoacCC62lA1PxwfmOn
        AaXjovZ2Ow2ItHD+sKYBy62pCAG2BAgALgRy0BJA093EhUC1bGFxTOALOhoBwKXA0V0KXG9gcHNxivBz
        OhwBQADECwDl6wTWSO2VGi3uHfht8cepYIXxmC/ZBeBegDABULl3oLu4i7BABSrc4wVWg7LcC8C9AI0G
        AK2xlrc6r4F7AbgXgACIthV0BQD3AkRnLwCNAOBS4JgvBaYRAAQAAUAjALgXIK57AWgEAPcCxHwvAI0A
        4F6AGO8FoBEAXAjEvQA0AoBLgbkUmKY1ALLSOY5uWSLeeGS5e+fTVCgTypa1AEBaOse+jdeJ5+5b7N75
        NBXKhLKlCQACoKYDpFrEgbsWKEdx2vTWXSgTyoYy1ip/Z2uz2HHbtcpRHDe9NRfKhLKhjAQAAVD1BUg2
        NSkHyToceDNBKBPKhjJalR8OknY48GaCUCaUzar8BEDMAUDFXgQAAUARADQCgCIAaJGznNQ5vuhUDZ0r
        viO0iNokqWN80akaOirVQjeJti1kK4Cqov+UGqR7xAcCx4og4FmJ8da5Ys1P54+ZtRT7ezwvMd7KsdlP
        o9FoNBqNRqPRaDQajUaj0Wg0Go1Go8Xa/h8x18WtXneCugAAAABJRU5ErkJggg==
</value>
  </data>
</root>